(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    133668,       2544]
NotebookOptionsPosition[    131847,       2505]
NotebookOutlinePosition[    132243,       2521]
CellTagsIndexPosition[    132200,       2518]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["<<MaTeX\.b4", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.9428616577479143`*^9, 3.942861801544595*^9}, {
  3.942861974448995*^9, 3.9428619996585407`*^9}, {3.942862428569584*^9, 
  3.942862469414184*^9}, {3.942862540885648*^9, 3.942862571780472*^9}, {
  3.942863972761821*^9, 3.942863974722693*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e901ed4f-2dbc-469e-aecc-6595557b1342"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"invalid character '\.b4' (U+00B4) (<unknown>, line \
1)\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PythonError\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"invalid character '\.b4' (U+00B4) (<unknown>, line \
1)\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PythonError\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"FailureCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"SyntaxError\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Traceback\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    
                    TemplateBox[{
                    "\"SyntaxError\"", "\" \"", 
                    "\"invalid character '\.b4' (U+00B4) (<unknown>, line \
1)\""}, "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    
                    TemplateBox[{
                    "\"SyntaxError\"", "\" \"", 
                    "\"invalid character '\.b4' (U+00B4) (<unknown>, line \
1)\""}, "RowDefault"]}, {"", 
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py\"", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"safe_wl_execute\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py\"", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"safe_wl_execute\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{"\"  16.  \""}, {"\"  17.  \""}, {
                    "\"  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):\""}, {"\"  19.  \""}, {
                    "\"  20.      __traceback_hidden_variables__ = True\""}, {
                    "\"  21.  \""}, {"\"  22.      try:\""}, {
                    ItemBox[
                    "\"  23.          return export(function(*args, **opts), \
**export_opts)\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
                    False]}, {
                    "\"  24.      except Exception as export_exception:\""}, {
                    "\"  25.          try:\""}, {
                    "\"  26.              try:\""}, {"\"  27.  \""}, {
                    "\"  28.                  # The user can provide an \
exception class, and it can be broken, in which case we are running \
another\""}, {
                    "\"  29.                  # try / except to return errors \
that are happening during class serialization\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless"], " in ", "safe_wl_execute"}], 
                    Column[{
                    
                    Column[{"  16.  ", "  17.  ", 
                    "  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):", "  19.  ", 
                    "  20.      __traceback_hidden_variables__ = True", 
                    "  21.  ", "  22.      try:", 
                    Item[
                    "  23.          return export(function(*args, **opts), \
**export_opts)", Background -> LightYellow], 
                    "  24.      except Exception as export_exception:", 
                    "  25.          try:", "  26.              try:", 
                    "  27.  ", 
                    "  28.                  # The user can provide an \
exception class, and it can be broken, in which case we are running another", 
                    "  29.                  # try / except to return errors \
that are happening during class serialization"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"handle_message\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"handle_message\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{"\" 130.  \""}, {"\" 131.  \""}, {
                    "\" 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):\""}, {"\" 133.  \""}, {
                    "\" 134.      __traceback_hidden_variables__ = True\""}, {
                    "\" 135.  \""}, {
                    "\" 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)\""}, {
                    ItemBox[
                    "\" 137.      result = evaluate_message(**message)\"", 
                    Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
                    False]}, {"\" 138.  \""}, {
                    "\" 139.      sys.stdout.flush()\""}, {
                    "\" 140.      return result\""}, {"\" 141.  \""}, {
                    "\" 142.  \""}, {
                    "\" 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "handle_message"}], 
                    Column[{
                    
                    Column[{" 130.  ", " 131.  ", 
                    " 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):", " 133.  ", 
                    " 134.      __traceback_hidden_variables__ = True", 
                    " 135.  ", 
                    " 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)", 
                    Item[
                    " 137.      result = evaluate_message(**message)", 
                    Background -> LightYellow], " 138.  ", 
                    " 139.      sys.stdout.flush()", 
                    " 140.      return result", " 141.  ", " 142.  ", 
                    " 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"evaluate_message\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"evaluate_message\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{
                    "\" 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):\""}, {"\" 112.  \""}, {
                    "\" 113.      __traceback_hidden_variables__ = True\""}, {
                    "\" 114.  \""}, {"\" 115.      result = None\""}, {
                    "\" 116.  \""}, {
                    "\" 117.      if isinstance(input, \
six.string_types):\""}, {
                    ItemBox[
                    "\" 118.          result = execute_from_string(input, \
**opts)\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> False]}, {
                    "\" 119.  \""}, {
                    "\" 120.      if isinstance(args, (list, tuple)):\""}, {
                    "\" 121.          # then we have a function call to \
do\""}, {"\" 122.          # first get the function object we need to \
call\""}, {"\" 123.          result = result(*args)\""}, {"\" 124.  \""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "evaluate_message"}], 
                    
                    Column[{
                    
                    Column[{
                    " 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):", " 112.  ", 
                    " 113.      __traceback_hidden_variables__ = True", 
                    " 114.  ", " 115.      result = None", " 116.  ", 
                    " 117.      if isinstance(input, six.string_types):", 
                    Item[
                    " 118.          result = execute_from_string(input, \
**opts)", Background -> LightYellow], " 119.  ", 
                    " 120.      if isinstance(args, (list, tuple)):", 
                    " 121.          # then we have a function call to do", 
                    
                    " 122.          # first get the function object we need \
to call", " 123.          result = result(*args)", " 124.  "}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, True]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"execute_from_string\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"execute_from_string\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{"\"  64.  \""}, {
                    "\"  65.      # this is creating a custom __loader__ that \
is returning the source code\""}, {
                    "\"  66.      # traceback serializers is inspecting \
global variables and looking for a standard loader that can return source \
code.\""}, {"\"  67.  \""}, {
                    "\"  68.      env = EvaluationEnvironment(code=code, \
**opts)\""}, {"\"  69.      result = None\""}, {
                    "\"  70.      expressions = list(\""}, {
                    ItemBox[
                    "\"  71.          compile(\"", Background -> 
                    RGBColor[1, 1, 0.85], StripOnInput -> False]}, {
                    "\"  72.              code,\""}, {
                    "\"  73.              filename=\\\"<unknown>\\\",\""}, {
                    "\"  74.              mode=\\\"exec\\\",\""}, {
                    "\"  75.              flags=ast.PyCF_ONLY_AST | \
unicode_literals.compiler_flag,\""}, {"\"  76.          ).body\""}, {
                    "\"  77.      )\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}, {"", 
                    PaneBox[
                    TagBox[
                    
                    GridBox[{{"\"Key\"", "\"Value\""}, {"\"code\"", 
                    "\"<<MaTeX\.b4\""}, {"\"globals\"", "\"{}\""}, {
                    "\"opts\"", "\"{'constants': {}}\""}, {"\"result\"", 
                    "\"None\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}},
                     AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Null}}, "Rows" -> {
                    GrayLevel[0.85]}}, 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {"Columns" -> {{
                    Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"code", "<<MaTeX\.b4"}, {
                    "globals", "{}"}, {"opts", "{'constants': {}}"}, {
                    "result", "None"}}, Background -> {Null, {LightGray}}, 
                    Alignment -> Left, Frame -> LightGray]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", 
                    "execute_from_string"}], 
                    Column[{
                    
                    Column[{"  64.  ", 
                    "  65.      # this is creating a custom __loader__ that \
is returning the source code", 
                    "  66.      # traceback serializers is inspecting global \
variables and looking for a standard loader that can return source code.", 
                    "  67.  ", 
                    "  68.      env = EvaluationEnvironment(code=code, \
**opts)", "  69.      result = None", "  70.      expressions = list(", 
                    Item[
                    "  71.          compile(", Background -> LightYellow], 
                    "  72.              code,", 
                    "  73.              filename=\"<unknown>\",", 
                    "  74.              mode=\"exec\",", 
                    "  75.              flags=ast.PyCF_ONLY_AST | \
unicode_literals.compiler_flag,", "  76.          ).body", "  77.      )"}, 
                    Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"code", "<<MaTeX\.b4"}, {
                    "globals", "{}"}, {"opts", "{'constants': {}}"}, {
                    "result", "None"}}, Background -> {Null, {LightGray}}, 
                    Alignment -> Left, Frame -> LightGray]}]}]}, True]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FontFamily -> "Courier", StripOnInput -> 
                    False], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[
                    TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    
                    Row[{"SyntaxError", " ", 
                    "invalid character '\.b4' (U+00B4) (<unknown>, line 1)"}], 
                    Style[
                    Column[{
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless"], " in ", "safe_wl_execute"}], 
                    Column[{
                    
                    Column[{"  16.  ", "  17.  ", 
                    "  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):", "  19.  ", 
                    "  20.      __traceback_hidden_variables__ = True", 
                    "  21.  ", "  22.      try:", 
                    Item[
                    "  23.          return export(function(*args, **opts), \
**export_opts)", Background -> LightYellow], 
                    "  24.      except Exception as export_exception:", 
                    "  25.          try:", "  26.              try:", 
                    "  27.  ", 
                    "  28.                  # The user can provide an \
exception class, and it can be broken, in which case we are running another", 
                    "  29.                  # try / except to return errors \
that are happening during class serialization"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "handle_message"}], 
                    Column[{
                    
                    Column[{" 130.  ", " 131.  ", 
                    " 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):", " 133.  ", 
                    " 134.      __traceback_hidden_variables__ = True", 
                    " 135.  ", 
                    " 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)", 
                    Item[
                    " 137.      result = evaluate_message(**message)", 
                    Background -> LightYellow], " 138.  ", 
                    " 139.      sys.stdout.flush()", 
                    " 140.      return result", " 141.  ", " 142.  ", 
                    " 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "evaluate_message"}], 
                    
                    Column[{
                    
                    Column[{
                    " 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):", " 112.  ", 
                    " 113.      __traceback_hidden_variables__ = True", 
                    " 114.  ", " 115.      result = None", " 116.  ", 
                    " 117.      if isinstance(input, six.string_types):", 
                    Item[
                    " 118.          result = execute_from_string(input, \
**opts)", Background -> LightYellow], " 119.  ", 
                    " 120.      if isinstance(args, (list, tuple)):", 
                    " 121.          # then we have a function call to do", 
                    " 122.          # first get the function object we need \
to call", " 123.          result = result(*args)", " 124.  "}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, True], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", 
                    "execute_from_string"}], 
                    Column[{
                    
                    Column[{"  64.  ", 
                    
                    "  65.      # this is creating a custom __loader__ that \
is returning the source code", 
                    "  66.      # traceback serializers is inspecting global \
variables and looking for a standard loader that can return source code.", 
                    "  67.  ", 
                    "  68.      env = EvaluationEnvironment(code=code, \
**opts)", "  69.      result = None", "  70.      expressions = list(", 
                    Item[
                    "  71.          compile(", Background -> LightYellow], 
                    "  72.              code,", 
                    "  73.              filename=\"<unknown>\",", 
                    "  74.              mode=\"exec\",", 
                    "  75.              flags=ast.PyCF_ONLY_AST | \
unicode_literals.compiler_flag,", "  76.          ).body", "  77.      )"}, 
                    Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"code", "<<MaTeX\.b4"}, {
                    "globals", "{}"}, {"opts", "{'constants': {}}"}, {
                    "result", "None"}}, Background -> {Null, {LightGray}}, 
                    Alignment -> Left, Frame -> LightGray]}]}]}, True]}], 
                    FontFamily -> "Courier"]}, True]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ], HoldForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "PythonError", <|
   "MessageTemplate" :> 
    "invalid character '\.b4' (U+00B4) (<unknown>, line 1)", 
    "MessageParameters" :> <||>, "FailureCode" :> "SyntaxError", "Traceback" :> 
    OpenerView[{
       Row[{
        "SyntaxError", " ", 
         "invalid character '\.b4' (U+00B4) (<unknown>, line 1)"}], 
       Style[
        Column[{
          OpenerView[{
            Row[{
              Button[
               Style[
               "/Applications/Mathematica.app/Contents/SystemFiles/Components/\
WolframClientForPython/wolframclient/language/decorators.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                SystemOpen[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
               Appearance -> "Frameless"], " in ", "safe_wl_execute"}], 
            Column[{
              
              Column[{"  16.  ", "  17.  ", 
                "  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):", "  19.  ", 
                "  20.      __traceback_hidden_variables__ = True", "  21.  ",
                 "  22.      try:", 
                Item[
                "  23.          return export(function(*args, **opts), \
**export_opts)", Background -> LightYellow], 
                "  24.      except Exception as export_exception:", 
                "  25.          try:", "  26.              try:", "  27.  ", 
                "  28.                  # The user can provide an exception \
class, and it can be broken, in which case we are running another", 
                "  29.                  # try / except to return errors that \
are happening during class serialization"}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
          OpenerView[{
            Row[{
              Button[
               Style[
               "/Applications/Mathematica.app/Contents/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                SystemOpen[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
               Appearance -> "Frameless"], " in ", "handle_message"}], 
            Column[{
              
              Column[{" 130.  ", " 131.  ", 
                " 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):", " 133.  ", 
                " 134.      __traceback_hidden_variables__ = True", " 135.  ",
                 " 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)", 
                Item[
                " 137.      result = evaluate_message(**message)", Background -> 
                 LightYellow], " 138.  ", " 139.      sys.stdout.flush()", 
                " 140.      return result", " 141.  ", " 142.  ", 
                " 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):"}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
          OpenerView[{
            Row[{
              Button[
               Style[
               "/Applications/Mathematica.app/Contents/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                SystemOpen[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
               Appearance -> "Frameless"], " in ", "evaluate_message"}], 
            Column[{
              
              Column[{" 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):", " 112.  ", 
                " 113.      __traceback_hidden_variables__ = True", " 114.  ",
                 " 115.      result = None", " 116.  ", 
                " 117.      if isinstance(input, six.string_types):", 
                Item[
                " 118.          result = execute_from_string(input, **opts)", 
                 Background -> LightYellow], " 119.  ", 
                " 120.      if isinstance(args, (list, tuple)):", 
                " 121.          # then we have a function call to do", 
                " 122.          # first get the function object we need to \
call", " 123.          result = result(*args)", " 124.  "}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray]}]}, True], 
          OpenerView[{
            Row[{
              Button[
               Style[
               "/Applications/Mathematica.app/Contents/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                SystemOpen[
                "/Applications/Mathematica.app/Contents/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
               Appearance -> "Frameless"], " in ", "execute_from_string"}], 
            Column[{
              
              Column[{"  64.  ", 
                "  65.      # this is creating a custom __loader__ that is \
returning the source code", 
                "  66.      # traceback serializers is inspecting global \
variables and looking for a standard loader that can return source code.", 
                "  67.  ", 
                "  68.      env = EvaluationEnvironment(code=code, **opts)", 
                "  69.      result = None", "  70.      expressions = list(", 
                
                Item["  71.          compile(", Background -> LightYellow], 
                "  72.              code,", 
                "  73.              filename=\"<unknown>\",", 
                "  74.              mode=\"exec\",", 
                "  75.              flags=ast.PyCF_ONLY_AST | \
unicode_literals.compiler_flag,", "  76.          ).body", "  77.      )"}, 
               Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray], 
              OpenerView[{"Local variables", 
                
                Grid[{{"Key", "Value"}, {"code", "<<MaTeX\.b4"}, {
                  "globals", "{}"}, {"opts", "{'constants': {}}"}, {
                  "result", "None"}}, Background -> {Null, {LightGray}}, 
                 Alignment -> Left, Frame -> LightGray]}]}]}, True]}], 
        FontFamily -> "Courier"]}, True]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.942861816481818*^9, 3.942861985298767*^9, 
  3.942862573616643*^9, 3.942864131051888*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"cf89b514-04b9-4e60-aea1-25d16aaea571"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "MaTeX`"}]], "Input",
 CellChangeTimes->{{3.9428641718319674`*^9, 3.942864181174452*^9}, 
   3.942865148433654*^9},
 NumberMarks->False,
 CellLabel->"In[1]:=",ExpressionUUID->"21a66614-1330-4da4-a45b-ca3798065533"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cadena1", "=", 
   RowBox[{"MaTeX", "[", 
    RowBox[{"\"\<x_{1}=2\>\"", ",", 
     RowBox[{"FontSize", "->", "12"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"x", "^", "2"}]}], "-", 
    RowBox[{"7", "x"}], "+", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"Text", "[", 
     RowBox[{"cadena1", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"b78c436d-ab9d-467b-bc64-2ec77d11728c"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1nk8VFscAPBrnYmSJSq7suVppdL6u6GoJM+WtClKi7Q+T1lCiAjZt2Sn
QqIk5FySeMlaqMiSZJ+ZO8wwlnm3v+7n+/mdz1l+53fOPWpnrlieFcQwTEIA
w/58j3vrfubzGahE06mLz9fCf5AmkuwpBhq7h5a1c7VwB2dHs8FRBgorl/fM
Z2jhZy0Saxo6GEgysbnjVI8W7rqK/irhOQPJ6W9/11qphfvW/ozRO8VAq7qE
L7K8tPBsiaQjzpUTyGDuX67UvCbOTFn0vdFzHJ3z/CLVu6CBP32y/PPddyNI
RSK8dfb3anyXT4+2q8EQinxIfkmjr8JdO4LElct+ofgZJ9+Avar4+xWOvcUi
P9GCWWvPvX5FfEqDK3nnTi9KztSxUkpdicdtd3d2CPyOUmOvWAsYyeF3dN7X
HdJqR6MfDseYqMngK4sC+rLUW1CZN4N247gkzleweBt16QNKfqd+sGqxOH5K
dNrszIMydKBjqbSolCief+7KNs2cRBQw4ZV76JYAnid0fRd8yYe0ZysNpTNm
wBTxOQWBVeBnoX87MIIF4jY9Nm5XG0B5c/DX09P9oHszuTIqqg3qNIuLMr5X
gWr2l0TfyE4oPNw5Rzo3oTqh/MiM+W6I/pBzVOLnT9TjFHRhbWAfaGslmU31
jqOXJ4KXZxgNQN6DyWjpfDaK+b6o86z5AESKuTrtrWQjt6P347WPDkBF4ze7
y01sZGATsrLAdQAadMMKk1lsVG72QOFNwgBMwHGFW5snUfWOhypNjAHYUB3z
Q7t8EjWvTNCaTfoFL7d4KzhVTqHRL7lbrSYHoaJH/cr+TC5KdilbdWJhEPov
3Bf99IKLzIUaljjTf4MO79BfJoiLCjcwft5W/A30tQxFlW9c5BayOSLd+DdI
diWknlg6jQT3VA+xon/DvlMRa2Tdp5F83veEiM1DYMATMHQ1nEH7/STmPrkN
g5kfN7SujIcsbY4cLvQdhg3WDf/01PKQvXZqemToMDS3+BmNtvKQS+PG/UfS
h8GwOfpB3wgPRcjbxPZ+GgbBb2ZdpvKzqKMoaQNbfQQI1SVOgv/OorM/tc+u
aBsBM49GRTXtOeRacq2U1z0CL2s60z5vmkNuwWXi3UMj0PmmRtxr1xwKWm9W
lLYwAtY5e8LyLOdQnscVvo7OKCiGNx0K9JxDbJmShF2+ozD9cMdr9cY55Gts
1Hhm/RiUOFnrLbkwj+w3KJmFbhsDU03TAHRtHukrcutfGY0BJ7hR+/zteTTI
fvqebjcGmVujnJJD5pFZhvTbAp8xcNWdK4jIn0crBPuf8VrGINLDLDyXMY8K
kU9w5M1xWFY46BXjsoDuP7OnVXiPg/2rdYLSNxeQY5x+wK+gcag4vqjT32MB
yV0Z8jF4NA7tD93cD91fQJ7KFu4/3o/D9ZgNoRdzFpCpl4qzzvIJ2Cm4mt/W
s4B6t1caV7+ZgMXXBWSc9vPR61SHvNJ3EyAZoG8dcpiPwkSFlj3/NAGcrOMm
T2z4aGeryc+kvglwkQo1qj/NR/EXWnz/WcQAXphzVMItPrKIH6jUPsqAaHWp
hx45fKS1EKip4siAatkY1pJ8PlpwXBMme5kBn5dJCMcV8VHeetcTgr4MSNnZ
s/vBWz6if+DOfs9lQPumBXGxNj6qmhLbFj7NgNo364T3zvFRQ75ts6EAEyJq
BAzTMIwo7dUS3i3KhHXFg/YKQhgRvu+/S/qSTNitkRonQMeIXdJLd6ipM6Hw
eMvOWCmMSHgS/5V3kAnNK9Zu6V2NEX93PpMrSGLCstr6AY4xRpx/Eu8tm8aE
fkcjZTETjPC5HTDomc2EbBD5sXw/RhQonio5+IIJoi9OM1cdwgix09K2w7VM
2O7h5cC1xoiaYfcYdZIJ1vm4a4IjRnwvOzsfwmWCg87uxTZnMYIMsTzLnmPC
mV93N4g7Y4TaOt3N1TQW7JYdEne+iBHe13s+n1JigdNxGYnuqxhhMLt3WZIp
C84HTUG1J0YcbtjkKWjOgqIBN0NNb4w490hl4IIVC5je+Ef/OxgRAzPFBidZ
YHo578pGP2q8u3lW7TdYcG7jb6H99zBikU1C+a5bLDDzemrgG4QRqpqBq7O8
WaBNK2EXB1P9151i3whmQcXnrDl6KEbkLZaJknrMAusjQ0evRWDEu24+zz2T
Bd8ixwmvhxjxrWDsTO8TFtgu3lHgH0n1/3ftpucvqf7eFCj4RVPzi7nVavYf
C7bwpvfsiMcIr3Pntr9sYsFJDfy7QgJGRG+1Slf4wgL3sCYeh3L1V93rIz0s
CJT/0JCchBEqyr1SQVMskJRfWZGdghEpHrJLo3gsqFt//vHhxxih/PXA4hQ+
Cya7RCrZfxz9SvTlIhIy53Xz16ZR7VkjQkiCBO1rJV7vKCsdVhX4T4aEVZ5h
wdbpGKEoFjLbo0SCi52O1fkMjEh2JqZHVpFQsWZCcpSywvupqSktEnwiMbEL
mRgh7+PAFN9EgpOOVIFtFkYkdseMy22l4keXHq2lvHLHxxG1nSRIqx6HjdkY
sYKz+dfWfSSE3uh7O0053upSv+FBEtwweVubHIxY/iK155AFCa3qaWvyKcdK
tHfZ2ZCQ3utmgOVihJyL+DdHexIG9JL8zCnH1uMdrqdISFaWoMdTltVy+3zL
iYSa1Ka6LsrL+nsbw11JuHlp99yRJ1R+Qa4h8QYJ08WjrmGUZR4drM9yJ2Es
6rciQTmS51Nb6EWCtfgm0XHK0nYl78r9SNgg/1FH9ikVfzVK1N6j1kcU3Teg
LCWjVtkSSoLhwpDGEcoRV23Lux5S62m7PHeVsmRjSOnvWBKU8T0SgX/if1W9
IpNI2G7seCyW8tJgTtF8Kgl1PW0/0yiHDf5VSM8m4T/pqJxcyhLGp/NlnpGw
uzs1++mfeFrsU+VCEjRhvjeH8hL+x5w1r6j5GOTaplIOPS6QpV9Ggnl9Gi2a
8uKyLemASIhgDbP9/sSXuzw+UEOC8QsfhcuUxf9JS7apJ+Eq/Zy3JeX7re0J
Do0k0LkJinqUxTYsjrvURoKclyJH4k/8wZ5ot04SYhPHxQap/CwadXvo203C
/cNLjpVSDjLNCwvtJ4GZ5DEYQJme3RcS95uEhjsG+eZ/4kLLg9PHSFgxa/Rc
mjLttFlgPouEziUpYy3UfgVW+t4t5ZAgVrrvbChlUcXXPu9mSSic2bXS8E/8
1phXI8aG/1rv0tlUfYh0qHl8FWGDrdEKvceUhSND/2EsZUPDiO72Yaq+/BlV
13nL2FCkli93j7LQIe4VEXk2iDE91qlSFqSfuaigzgY5KxFJY6peMe+tp0wM
2BCx6UOiJVXvz24FRVTuYkPrN9mCSup82P7ztWqzERte4j5aGpTzXTzU1c3Z
4LA316wvFSPsj6FhzIkNdpv2OshR51PkiKSC+wU25H64lmnzCCMKLU+bMVzZ
kCpfZh6eTK3/gNDz7ltsuDrz6AsrESNeGpjcLAtnQ2FiUd6NOIw4pR+ftTGG
DdJKb9UCY//sx3B7biIb5E/8nIuMwYjTWiHb4rLYICF391dSFFUvck0LN8qp
+V9a6nMxHCOc2bbBa3+zQTjr2DdeAFXPjJyyzDEqLrDqRbE/RlSOTI8qkGwo
VRCeOHf3z3lJNBebZwMnSCGxwgcjiOYfMr+lJ4FuEleu7kGd94JzKam7JyHx
7+rVQ64Y8f7J66blxpNgHGR83OQyRlzNoguE75+EaM9+XuoljPiQ/NTRy3oS
VqRcu2h0HiNuhkxo21+chIqaLum9pzGi8bxbsUzsJJxPHQzaYYkR7mnPjl5L
moQ6/3TXAxYYsepbL78xdRJSj9tPWJljhNvBg2b3n00CMfi23PYAdb+tU/2F
VU1CqZN1mIIhRriy6+UmRichiIak0zdQ940uv+Igi/Lq7fH266j71Enf8Qln
EgT1XrxeokvdJ+0pz50EpsBBN6rGUYvKR+kN0+9yU9AepCnXpETl01vpdt2e
KUgduh+fvoj6v5ZYqmqaTAG+8/1bYRpGnGHcq71rNgV2d2c9TwtjRIkDKQ1H
pmCo43Wk7AIfnTT68OyVyxQ0H+rU2zbERwX0a93pcdR496L1b5fxkXlUDe41
PgXnN/LW/7TlIwc7Q09vcgrMigVeIAs+uq5EvL7DnQIi5MKnyAN8FJdTvs5P
gAMWuH2n4m4+6i0vUrwnywHdUrSFUOejGwOp0xG7ONDcnyhrzFxA8Zu9CjMf
cCBvdeQx3GcBPeXxRrMiOeDzb6Yp030BVSB3rZw4DnSqLW+JvbaA+vbfTHmS
xgGz20ovP5xZQDonL4UWvOLA0LaC6lJjqn3g0fOl3RyYZvcIdIpS7Ts2qzas
5UKFlT9d3H8eqexoCt+mx4XQDKF/26n33YmU8/xsAy4Unoz5Gku9/746Jf3w
NeICU455m3NyHrWwsEdbj3LBNNxv3cZt86hKvGFlhj8XzB4rHI0enUNpcEbm
9ncu9O5UrpAynUOnc8JEtYOnAXM9+2aoh4focVfFt4VNw4Cvwv63n3moINBS
8kDUNOC5kQZB9TzEOysn7/JoGix0a7YIFPNQtHrK2sIX09AppV94J4CHatPy
rQ2+TUOQpUlcgTYP6SQ3pJv+NQMNT3ds+ew8gyYjxODCpxmwKDn2enc9FyW8
bS51aJ0BOutYFaOci3aPxG6y65iBZmODkLgCLgoyWq1p0jcDxNaAkx+juEiR
s2OJxtQM1B24KlRzgov2Hrv8vVeRB6kaIftmGBwUq9H8r50LD+wK2l7cWMJB
28piCk3EZ4G+uFAxV3cSXXSlr9FzmoPmheGeAT0Ger4zhS2UPQ+q9lNsgWu/
UF+Mwvs+QT4QB7pFn4i1oSjhkzct1THcZ9tGQwdWCUj8eJUuWEPZe+ad5cZe
wLx8rbddE8B7mz7KGnMZMJt78nm/tCBO1/h6LozDhcuJzx9IVwviBs3zmZmZ
GF76VxBdylUIZ47e8ygLF8EXH7iu6ychjHde3WrlcFMM71jb3HarQhjvcp4c
HBWXxJ+lgPrASRF8Tr/YtfKLNG73fIuU0oIIbmoUUyH2Whb3CEjz7XoqiveK
ZOrPYCvx3CGlJAkzGl6jeM6Dtl0R938U4PDDnIbXbXaZrTJVxB0sxzUK/qbh
qWW21+8cUcSXV1QUHjpCw+NpX42F/lHEA8OP1YaeoeHY80jPdYWKuNOWBJbY
LRruo/dti4yWEq7qv8yUlk3DTWXK2mWXK+NzBp5LOnJpuHvWIb31msp45/jP
1uxnNNwp433gwc3KePiR4hP7XtDwzP4z0g+slPEFHcsbARU0PMLVskIvQhnv
aglPEWqj4ZIVIseWiqngpYFcx7Yv1HzFejXsVqrg0TtOrcnopOEW71N+Z2ir
4Aez1r00/EHDc73qDxubqOBl7p/qfYdp+OfZtqJcfxU8du3m8L/HaHhnbov+
omgV/Fp/srUag4YnVxXnu2So4NpmLj3EJA0P2qLhv7NaBRcW+JwZwaXheZEv
+3JbVPDeVzsuOvCo/Nhrb1nRp4JXXMxYv2GehtuF+fjeZ6rgcSriU3w+Nd7a
t+/4fBX8f2qDhO4=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwV1nk8VFscAPBrnYmSJSq7suVppdL6u6GoJM+WtClKi7Q+T1lCiAjZt2Sn
QqIk5FySeMlaqMiSZJ+ZO8wwlnm3v+7n+/mdz1l+53fOPWpnrlieFcQwTEIA
w/58j3vrfubzGahE06mLz9fCf5AmkuwpBhq7h5a1c7VwB2dHs8FRBgorl/fM
Z2jhZy0Saxo6GEgysbnjVI8W7rqK/irhOQPJ6W9/11qphfvW/ozRO8VAq7qE
L7K8tPBsiaQjzpUTyGDuX67UvCbOTFn0vdFzHJ3z/CLVu6CBP32y/PPddyNI
RSK8dfb3anyXT4+2q8EQinxIfkmjr8JdO4LElct+ofgZJ9+Avar4+xWOvcUi
P9GCWWvPvX5FfEqDK3nnTi9KztSxUkpdicdtd3d2CPyOUmOvWAsYyeF3dN7X
HdJqR6MfDseYqMngK4sC+rLUW1CZN4N247gkzleweBt16QNKfqd+sGqxOH5K
dNrszIMydKBjqbSolCief+7KNs2cRBQw4ZV76JYAnid0fRd8yYe0ZysNpTNm
wBTxOQWBVeBnoX87MIIF4jY9Nm5XG0B5c/DX09P9oHszuTIqqg3qNIuLMr5X
gWr2l0TfyE4oPNw5Rzo3oTqh/MiM+W6I/pBzVOLnT9TjFHRhbWAfaGslmU31
jqOXJ4KXZxgNQN6DyWjpfDaK+b6o86z5AESKuTrtrWQjt6P347WPDkBF4ze7
y01sZGATsrLAdQAadMMKk1lsVG72QOFNwgBMwHGFW5snUfWOhypNjAHYUB3z
Q7t8EjWvTNCaTfoFL7d4KzhVTqHRL7lbrSYHoaJH/cr+TC5KdilbdWJhEPov
3Bf99IKLzIUaljjTf4MO79BfJoiLCjcwft5W/A30tQxFlW9c5BayOSLd+DdI
diWknlg6jQT3VA+xon/DvlMRa2Tdp5F83veEiM1DYMATMHQ1nEH7/STmPrkN
g5kfN7SujIcsbY4cLvQdhg3WDf/01PKQvXZqemToMDS3+BmNtvKQS+PG/UfS
h8GwOfpB3wgPRcjbxPZ+GgbBb2ZdpvKzqKMoaQNbfQQI1SVOgv/OorM/tc+u
aBsBM49GRTXtOeRacq2U1z0CL2s60z5vmkNuwWXi3UMj0PmmRtxr1xwKWm9W
lLYwAtY5e8LyLOdQnscVvo7OKCiGNx0K9JxDbJmShF2+ozD9cMdr9cY55Gts
1Hhm/RiUOFnrLbkwj+w3KJmFbhsDU03TAHRtHukrcutfGY0BJ7hR+/zteTTI
fvqebjcGmVujnJJD5pFZhvTbAp8xcNWdK4jIn0crBPuf8VrGINLDLDyXMY8K
kU9w5M1xWFY46BXjsoDuP7OnVXiPg/2rdYLSNxeQY5x+wK+gcag4vqjT32MB
yV0Z8jF4NA7tD93cD91fQJ7KFu4/3o/D9ZgNoRdzFpCpl4qzzvIJ2Cm4mt/W
s4B6t1caV7+ZgMXXBWSc9vPR61SHvNJ3EyAZoG8dcpiPwkSFlj3/NAGcrOMm
T2z4aGeryc+kvglwkQo1qj/NR/EXWnz/WcQAXphzVMItPrKIH6jUPsqAaHWp
hx45fKS1EKip4siAatkY1pJ8PlpwXBMme5kBn5dJCMcV8VHeetcTgr4MSNnZ
s/vBWz6if+DOfs9lQPumBXGxNj6qmhLbFj7NgNo364T3zvFRQ75ts6EAEyJq
BAzTMIwo7dUS3i3KhHXFg/YKQhgRvu+/S/qSTNitkRonQMeIXdJLd6ipM6Hw
eMvOWCmMSHgS/5V3kAnNK9Zu6V2NEX93PpMrSGLCstr6AY4xRpx/Eu8tm8aE
fkcjZTETjPC5HTDomc2EbBD5sXw/RhQonio5+IIJoi9OM1cdwgix09K2w7VM
2O7h5cC1xoiaYfcYdZIJ1vm4a4IjRnwvOzsfwmWCg87uxTZnMYIMsTzLnmPC
mV93N4g7Y4TaOt3N1TQW7JYdEne+iBHe13s+n1JigdNxGYnuqxhhMLt3WZIp
C84HTUG1J0YcbtjkKWjOgqIBN0NNb4w490hl4IIVC5je+Ef/OxgRAzPFBidZ
YHo578pGP2q8u3lW7TdYcG7jb6H99zBikU1C+a5bLDDzemrgG4QRqpqBq7O8
WaBNK2EXB1P9151i3whmQcXnrDl6KEbkLZaJknrMAusjQ0evRWDEu24+zz2T
Bd8ixwmvhxjxrWDsTO8TFtgu3lHgH0n1/3ftpucvqf7eFCj4RVPzi7nVavYf
C7bwpvfsiMcIr3Pntr9sYsFJDfy7QgJGRG+1Slf4wgL3sCYeh3L1V93rIz0s
CJT/0JCchBEqyr1SQVMskJRfWZGdghEpHrJLo3gsqFt//vHhxxih/PXA4hQ+
Cya7RCrZfxz9SvTlIhIy53Xz16ZR7VkjQkiCBO1rJV7vKCsdVhX4T4aEVZ5h
wdbpGKEoFjLbo0SCi52O1fkMjEh2JqZHVpFQsWZCcpSywvupqSktEnwiMbEL
mRgh7+PAFN9EgpOOVIFtFkYkdseMy22l4keXHq2lvHLHxxG1nSRIqx6HjdkY
sYKz+dfWfSSE3uh7O0053upSv+FBEtwweVubHIxY/iK155AFCa3qaWvyKcdK
tHfZ2ZCQ3utmgOVihJyL+DdHexIG9JL8zCnH1uMdrqdISFaWoMdTltVy+3zL
iYSa1Ka6LsrL+nsbw11JuHlp99yRJ1R+Qa4h8QYJ08WjrmGUZR4drM9yJ2Es
6rciQTmS51Nb6EWCtfgm0XHK0nYl78r9SNgg/1FH9ikVfzVK1N6j1kcU3Teg
LCWjVtkSSoLhwpDGEcoRV23Lux5S62m7PHeVsmRjSOnvWBKU8T0SgX/if1W9
IpNI2G7seCyW8tJgTtF8Kgl1PW0/0yiHDf5VSM8m4T/pqJxcyhLGp/NlnpGw
uzs1++mfeFrsU+VCEjRhvjeH8hL+x5w1r6j5GOTaplIOPS6QpV9Ggnl9Gi2a
8uKyLemASIhgDbP9/sSXuzw+UEOC8QsfhcuUxf9JS7apJ+Eq/Zy3JeX7re0J
Do0k0LkJinqUxTYsjrvURoKclyJH4k/8wZ5ot04SYhPHxQap/CwadXvo203C
/cNLjpVSDjLNCwvtJ4GZ5DEYQJme3RcS95uEhjsG+eZ/4kLLg9PHSFgxa/Rc
mjLttFlgPouEziUpYy3UfgVW+t4t5ZAgVrrvbChlUcXXPu9mSSic2bXS8E/8
1phXI8aG/1rv0tlUfYh0qHl8FWGDrdEKvceUhSND/2EsZUPDiO72Yaq+/BlV
13nL2FCkli93j7LQIe4VEXk2iDE91qlSFqSfuaigzgY5KxFJY6peMe+tp0wM
2BCx6UOiJVXvz24FRVTuYkPrN9mCSup82P7ztWqzERte4j5aGpTzXTzU1c3Z
4LA316wvFSPsj6FhzIkNdpv2OshR51PkiKSC+wU25H64lmnzCCMKLU+bMVzZ
kCpfZh6eTK3/gNDz7ltsuDrz6AsrESNeGpjcLAtnQ2FiUd6NOIw4pR+ftTGG
DdJKb9UCY//sx3B7biIb5E/8nIuMwYjTWiHb4rLYICF391dSFFUvck0LN8qp
+V9a6nMxHCOc2bbBa3+zQTjr2DdeAFXPjJyyzDEqLrDqRbE/RlSOTI8qkGwo
VRCeOHf3z3lJNBebZwMnSCGxwgcjiOYfMr+lJ4FuEleu7kGd94JzKam7JyHx
7+rVQ64Y8f7J66blxpNgHGR83OQyRlzNoguE75+EaM9+XuoljPiQ/NTRy3oS
VqRcu2h0HiNuhkxo21+chIqaLum9pzGi8bxbsUzsJJxPHQzaYYkR7mnPjl5L
moQ6/3TXAxYYsepbL78xdRJSj9tPWJljhNvBg2b3n00CMfi23PYAdb+tU/2F
VU1CqZN1mIIhRriy6+UmRichiIak0zdQ940uv+Igi/Lq7fH266j71Enf8Qln
EgT1XrxeokvdJ+0pz50EpsBBN6rGUYvKR+kN0+9yU9AepCnXpETl01vpdt2e
KUgduh+fvoj6v5ZYqmqaTAG+8/1bYRpGnGHcq71rNgV2d2c9TwtjRIkDKQ1H
pmCo43Wk7AIfnTT68OyVyxQ0H+rU2zbERwX0a93pcdR496L1b5fxkXlUDe41
PgXnN/LW/7TlIwc7Q09vcgrMigVeIAs+uq5EvL7DnQIi5MKnyAN8FJdTvs5P
gAMWuH2n4m4+6i0vUrwnywHdUrSFUOejGwOp0xG7ONDcnyhrzFxA8Zu9CjMf
cCBvdeQx3GcBPeXxRrMiOeDzb6Yp030BVSB3rZw4DnSqLW+JvbaA+vbfTHmS
xgGz20ovP5xZQDonL4UWvOLA0LaC6lJjqn3g0fOl3RyYZvcIdIpS7Ts2qzas
5UKFlT9d3H8eqexoCt+mx4XQDKF/26n33YmU8/xsAy4Unoz5Gku9/746Jf3w
NeICU455m3NyHrWwsEdbj3LBNNxv3cZt86hKvGFlhj8XzB4rHI0enUNpcEbm
9ncu9O5UrpAynUOnc8JEtYOnAXM9+2aoh4focVfFt4VNw4Cvwv63n3moINBS
8kDUNOC5kQZB9TzEOysn7/JoGix0a7YIFPNQtHrK2sIX09AppV94J4CHatPy
rQ2+TUOQpUlcgTYP6SQ3pJv+NQMNT3ds+ew8gyYjxODCpxmwKDn2enc9FyW8
bS51aJ0BOutYFaOci3aPxG6y65iBZmODkLgCLgoyWq1p0jcDxNaAkx+juEiR
s2OJxtQM1B24KlRzgov2Hrv8vVeRB6kaIftmGBwUq9H8r50LD+wK2l7cWMJB
28piCk3EZ4G+uFAxV3cSXXSlr9FzmoPmheGeAT0Ger4zhS2UPQ+q9lNsgWu/
UF+Mwvs+QT4QB7pFn4i1oSjhkzct1THcZ9tGQwdWCUj8eJUuWEPZe+ad5cZe
wLx8rbddE8B7mz7KGnMZMJt78nm/tCBO1/h6LozDhcuJzx9IVwviBs3zmZmZ
GF76VxBdylUIZ47e8ygLF8EXH7iu6ychjHde3WrlcFMM71jb3HarQhjvcp4c
HBWXxJ+lgPrASRF8Tr/YtfKLNG73fIuU0oIIbmoUUyH2Whb3CEjz7XoqiveK
ZOrPYCvx3CGlJAkzGl6jeM6Dtl0R938U4PDDnIbXbXaZrTJVxB0sxzUK/qbh
qWW21+8cUcSXV1QUHjpCw+NpX42F/lHEA8OP1YaeoeHY80jPdYWKuNOWBJbY
LRruo/dti4yWEq7qv8yUlk3DTWXK2mWXK+NzBp5LOnJpuHvWIb31msp45/jP
1uxnNNwp433gwc3KePiR4hP7XtDwzP4z0g+slPEFHcsbARU0PMLVskIvQhnv
aglPEWqj4ZIVIseWiqngpYFcx7Yv1HzFejXsVqrg0TtOrcnopOEW71N+Z2ir
4Aez1r00/EHDc73qDxubqOBl7p/qfYdp+OfZtqJcfxU8du3m8L/HaHhnbov+
omgV/Fp/srUag4YnVxXnu2So4NpmLj3EJA0P2qLhv7NaBRcW+JwZwaXheZEv
+3JbVPDeVzsuOvCo/Nhrb1nRp4JXXMxYv2GehtuF+fjeZ6rgcSriU3w+Nd7a
t+/4fBX8f2qDhO4=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 3}, {-2.0833333032457224`, 
             11.99999893877553}}, "Frame" -> {{False, False}, {False, False}},
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1, 3}, {-2.0833333032457224`, 11.99999893877553}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
t+/4fBX8f2qDhO4=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1, 3}, {-2.0833333032457224`, 11.99999893877553}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    FormBox[
     GraphicsBox[{
       Thickness[0.028587764436821043`], 
       StyleBox[{
         FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGI5IIaxWZDYzCSwGaB8BjL0DhR7oNwMAEUOAp8=
          "], CompressedData["
1:eJxdlHtI01EUx3+blYrzMefmb/MnOreRkUKmSIq0I6YVRUUGKQllOc0sFBIj
H1Q+AlmYPSBnkWmi/jEzkcykrIjs4SsKzFSwMqQwS8Og2nLt3rudkQcul8+P
3733nO/53qs+mL/b4MZxnMg+9tqH2D6mkvcn1i+oYPUP7Zd6TwGcbMi2R4oA
NhIPVbDYt3Anp0hwzC6+mxqfZnN3cYYuTRi2KqHOZI84ATabn7ZyY0rHHASD
JM7x8NjYVx5zMxB6yPpncvbdLIc9c28W6hplyFWh7rrBRSnyEJklUiid+jUe
PatATiXrPvDIIb03+gzflLCP5JMghfekrk4V+0/kD1dIfu+CHfvKYIDMEWEQ
cPJi4VBWAGhHP6Zy1zSMVyjgtCW+YLhNy+rYwCOnLOMsoluLEpnW16oCcpwp
Xcv0DFFCbv581YsYLepRnbC1N7tJg3ziSXeyKdLFJaTeq2FMj0IlJNVW+Gcf
CYNdpB61Cvl8mnGnqDYImdZ9QYDvTR2hQx4a5Hb/CJ+cWy7+lNk4GtOhZfVu
UsHvudlHcRod61MSj8zqkP/P92QwuSbYbOvSsDy3yYAjARrmpyh/qKv1LY71
0sGY94TCUOSD66lf7kuQab+sYuSG55ea81oseiPRRxyGTM8pUSNHkzikhvag
7siXR636CZJPkhoqA8tW5vb/RaZ6brchfy6bzhsx2/TzRJ/Daqgg/6/imC5n
HOtT3Fg/w7VM39ue2N8Ycu5xCTL1V6YfMvXhsB9sIT5p0yA/yC+dM8ldTPtR
4/BfpR8466X3cMYXNMSPk6GMWyQwQv0aBG+JnrFebJ8dPNSQ/Ao88L4InYoG
8QE35By6nxi5ebx1OqqCQ6b+tFn1TCcFq3de5LiXCqA6d4mZPlIeWUbybnYx
9YVJyfRMEbH7utbxrsws6Z0cWC5cXpf6B/m1pf/t9fSf+mLKSmTne+Fklo8c
XlFe0jMfBmC/nLyxMLFsYNIdWU9Y8IJw8t5VK5g+od6s7lO8Q18f1IPe9x4p
rqd+LZUhU79m8MjO9/Pr2WPG9RYVLH9f/wFaaYbj
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4oBb0jWJQWoO/8GA2wHGnzMTCCT5HH69fX3A
8rAqnM8AAg4qcL5oj9crFhMVB/sSx9rTdxD8aNUImXNzBOD8vfk1b2eqKsL5
dzRl1/yfrOjwqnir6G9tFQf3NUeXM8xQdCg/vM115l5lOD89DQjElB2EKyeV
nP2i4LBWSIcv3U7JwRgEJis4OE9oFkrbpYDBPwMCPAoOHxatVziroQjng81h
UYLzH7jGO876qATRV4Xgw9wP48P8B/bHUyW4/8HyiYpwPtgdlxUw+LDwhdij
6NAb0e3PaMADcd8NJTh/xbeXFWcmKMP5cxYp7/zjrgLnz5jAX2W2WhXOR48/
AMzdv9k=
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KO19gt12tqqFw578mrczjyo5wPguE5qF0qyUHf5+
K30w56M5nO93cWLMv8MI/hbzH4dSdhnA+f3BJSrT+xF8Xv/1U1IjMPnK1x4F
M5xRgvPd1xxdzhCh5BCt4PgxuQfBh5kP48Psh/FLtor+Pv0OwYe5H52P7r8d
wVYR/5fLwPm9Ed3+jBNk4f6F8WH2wfgw98D4MP/C+DD/oPNbFdhVz2yRgfNr
7v+4ZXxaGu5fGB9mPowPsx/Gh/kXxoe5H50P8x8AOIbKvQ==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYnnHj8ln1jo4vGnL7TaylnXYoJe3mLEHwd95
q+tvaruDQ839H7eMs2UcjEGg2sFB/ZPKy1knJSHqcxwc0tOAgE3SodvrFYtJ
ooOD25qjyxlmSDgsf+Gh958TwefxXz8ldYc9nC8+9QpnRpMtnH9DuibR6Kqt
wwPXeMdZGyUd+oNLVKb32zn8/Q8E+2UcniQuvGZy384hFWTfM1kHkPD/cAeH
apD7vJUcYP6ZCQKdynC+x/5aWYvnqnA+SHvaMg2HN7z7DGYqOTg8z9L+Nr1W
y0EC5J5HdnB+L8j+els4H+ye9TYQe+U14PyAW0CHC6nB+TWfNgRk31Jx+AoK
QFNbOB/sfnsEH2Y+ivx5WwefE+y2s01V4fwZIP/8RPANtFYKX1ii5qAPoqfY
OuxwaHp0XEIdbj6Mv+T+Pr45ygg+2B+yCP5eYLCki9g6GIHiVVjd4cRhp7WZ
fraQeN6sAdH/2dbhTfFW0d+nNR22mP84lLLLDs4/DlK/zx7OB1N6wPgA+UdK
A86HhT+MH84p1m58X9nhA1DZrOP2Ds4TmoXSpJQc1N8CI0TSHmL/ZAV4eILj
M1IMzjcBKxB1iBDffpGhzQHOR0/PAIiJQpc=
          "]]}, {
         Thickness[0.028587764436821043`]}, StripOnInput -> False]}, {
      ImageSize -> {34.97642839352429, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {35., 17.}, 
       PlotRange -> {{0., 34.98}, {0., 16.34}}, AspectRatio -> Automatic}], 
     TraditionalForm], {2, 2}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 3}, {-2.0833333032457224`, 11.99999893877553}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.942862011455652*^9, 3.9428625820266857`*^9, {3.942864159051011*^9, 
   3.942864186996881*^9}, 3.9428651606163607`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"6645a9ed-af33-4d08-a658-80f613cc9724"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"texStyle", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "->", "\"\<Latin Modern Roman\>\""}], ",", 
      RowBox[{"FontSize", "->", "12"}]}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "4"}]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"BaseStyle", "->", "texStyle"}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.80"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"MaTeX", "[", 
         RowBox[{"\"\<x^2+y^4=1\>\"", ",", 
          RowBox[{"Magnification", "->", "2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.3"}], "}"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9428626371096573`*^9, 3.942862637113346*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3a8cb57a-24d1-4829-a29e-f3347a8b1e25"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxdmAlYjWkbx1NxSAiZD5Et+5qlqMZNtiFfYpJUUzOibOUrpLIVKuFD9m18
mk8mE0I02bqJdtGUJTVp13LOe96iVNpGPffzujrnOtd1rnO95zzv89zL//+7
3yGrNi1bo66mpja3g5pa6+ekgLp8rcAiTPOVDarxUeCq7dY+Yqdi7NpyeMjm
2Qq0y3Ac77uiGDNnD3w1e6AChy48ZrDwWDGOWBU7KFNNgb1ujDZ3rC7GFL2O
9akv5aj3qvWHJVjuOelh76tyDNtZW59+pwSzo91yot3k2BIx43VMTgnGa0Sf
07GVo65TVR+nqhI8V15TG7NIjms0Y/fsmvUBg3uGup/WlyPkRGlG3/+AvQf+
lVX7tgI7bbWSbbUqxRl6eUUTvSrQ0m65wdqQUjQM7C07saQCF1XfeY1VpVh2
qXvF1zcmCZPWuf5chvc0jtrtxHKsPRBZdyCyDP+VGPxaubscrdbnTdQZ+e2z
sk/rhsrxcclFtx/qy1Czcub9iuhv/+v3SWtFYnE5jsyNWHMroEy6z/2NPj69
HcowrO+0lc1nKjBO4eWVkV2KOfpzT2gNlEv75nHY9P2TCKOqD5h8d/w6rSI5
ajje+v9tlw+4esip81mmCikuOjEv/Ud6K9B2UXXKvQsl+LztpcBbnw2bHPuW
YEOl+vs6NQGXuiVN25pQjK4uDhemDBWkPDXINIIX7BbwUzeHtS/yirDLvxsd
LN4JaDil9VWEwTf3nh/1ScAmtYM6Pl8K8VHh2NjCsUoMq5le2uJeiK7qVhqT
1itxVmv6XxXgdqflg/veVKL2vou3zerzMWuBi7A0W4mWstYD5mOkzKqyj66I
Mc9CzcL75SFMj7O/aijivbZ136Or38LjhSDi2I/hAdEnc/HZD1ovx2wR8U1b
XHLwRl1roEWU2/fISxmVjY2HtL2Xhop4JOp2sNnfWahxur5fp99FtLDMGPaf
bVk4wtDf2iBBxJ5t8XqNnlO05POzRIwON/zjZVomBrXcHq5fIOLO4UXzywIz
cLW7/QztUhEXt+03HXskvzHp8knE5XUXOtd3S8MFnjbpP9aK6JYOtoseJmOL
8+D8zC8iaretH49rfSfmbm4UcUJ3mazaJA59tytkAU1fv9fl5kYsf4Q7zStf
NNWJqN72+7uYGeFhat4sommIw6va4ddxf3RWpPXX75fVxw6due1XdHYN6bri
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
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        StyleBox[LineBox[CompressedData["
1:eJwl1Gl4CAQcBvDNzDbGNtsMc+2yE3PNsLlGRUhTKkQmlfuIQrqLUrodKSrk
6tDlzhlKiHKU+1Y5IndR+e3pw+/9f3+f5/0nFA0uHBQYEBDQWhTfEgRRkmBK
EUIoYZSmDOGUpRwRRBJFeaKJIZYKxFGRSlQmnipUpRrVqUECiSSRTAo1SSWN
dDLIJIta1KYO2dSlHvVpQENyaEQujWlCU/LIpxnNaUFLWlFQ3AdtuImbuYW2
tONW2tOBjtxGJ26nkM7cwZ104S7u5h660o3u3EsPenIfvSiiN/fThwd4kIfo
Sz/6M4CBDGIwQxjKMB5mOCN4hEcZyShG8xhjeJwneJKneJpneJbneJ6xjOMF
XmQ8L/EyE3iFV3mN13mDN3mLiUxiMlN4m6m8w7tMYzrv8T4fMIOZzOJDZjOH
ucxjPh/xMZ/wKQv4jM/5gi/5ioUsYjFLWMoylvM1K1jJKlazhrV8wzrWs4Fv
+Y6NfM8mNrOFH9jKNn7kJ7azg53s4md+YTd72Ms+9nOAgxziMEc4yjGOc4Jf
+Y3fOckpTnOGPzjLOf7kPBe4yCUuc4Wr/MXfXOM6//Av/1E8/kBKEERJgilF
CKGEUZoyhFOWckQQSRTliSaGWCoQR0UqUZl4qlCValSnBgkkkkQyKdQklTTS
ySCTLGpRmzpkU5d61KcBDcmhEbk0pglNySOfZjSnBS1pRUHg///wBr9qiug=

          "]],
         FontFamily->"Latin Modern Roman",
         FontSize->12]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "4"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^4 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Latin Modern Roman", FontSize -> 12},
  DisplayFunction->Identity,
  Epilog->{
    ArrowBox[{{0.1, 0.3}, {0.5, 0.8}}], 
    InsetBox[
     BoxData[
      FormBox[
       RowBox[{"MaTeX", "(", 
         RowBox[{"\"x^2+y^4=1\"", ",", 
           RowBox[{"Magnification", "\[Rule]", "2"}]}], ")"}], 
       TraditionalForm]], {0.1, 0.3}, 
     Scaled[{0.5, 1}]]},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9428626409286337`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"dab81d31-fd7c-4eae-bad8-145a98685993"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaTeX", "[", "\"\<\\\\sum_{k=1}^{\\\\infty} \\\\frac{1}{k}\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.942862713699675*^9, 3.94286271370347*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"495d6e45-ccb6-449f-9f11-e196378cc12a"],

Cell[BoxData[
 RowBox[{"MaTeX", "[", "\<\"\\\\sum_{k=1}^{\\\\infty} \\\\frac{1}{k}\"\>", 
  "]"}]], "Output",
 CellChangeTimes->{3.942862715493331*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"5dfcaa10-cbbe-4613-9228-4c83bff1a69e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "MaTeX`"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"0fe7fe7a-51ef-4cf0-9845-f75f63ecb41d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaTeX", "[", "\"\<\\\\sum_{k=1}^{\\\\infty} \\\\frac{1}{k}\>\"", 
  "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"42c175f8-42b8-411d-bdb6-e7ef0fdb04c2"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.03318951211417192], 
   {Thickness[0.01586458679057418], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQB2IQ7bG/VtbiuJaDvOPH5DOlDg4w/vIXHnr/Xzo4PIoQ
336xQdPBGASiHR1mTOCvMutWh/PB6p+rwvnHdu3oZStQcQBpYxBzdBCIDbhv
lK7sEFyiMv3/BgeHB67xjrMClRze8O4zmMnk6FB+eJvrTF8EH2zOZUWH3zG5
R/9JOTrwg/Q/V3A4rmk16bS7o0PN/R+3jE/Lw+2rAPG55eD8HcFWEf/VpeD8
N2253UbV4g43pWsSjd46wPlnQKAEwXdXLWWaxeDgsB2kn13KoWSr6O/TcvYO
BiBzPsvC+aUg985VgPOFKyeVnBVRcpgxEwhWQuVllR1A3JmWDg4mYIeoOBSs
6b6dccHeoYHlaL+hOYL/91vpgzkbVRyeJC68ZjLf3uHUYae1mfNUHXxOsNvO
drV3kAVFxHw1uH1yIH69OpwvPS9O83SBJpwPi7+poHj6jeDD4hcApczJmw==

      "], {{13.167200000000001`, 32.92809999999999}, {13.167200000000001`, 
      32.1234}, {12.553099999999999`, 31.549999999999997`}, {11.8766, 
      31.549999999999997`}, {11.167199999999998`, 31.549999999999997`}, {
      10.657799999999998`, 32.18749999999999}, {9.940629999999999, 33.0875}, {
      10.2344, 33.565599999999996`}, {10.887499999999998`, 34.4094}, {
      11.835899999999999`, 34.4094}, {12.7047, 34.4094}, {13.167200000000001`,
       33.5969}, {13.167200000000001`, 32.92809999999999}}, {{9.31875, 
      32.74529999999999}, {9.024999999999999, 32.267199999999995`}, {
      8.371879999999999, 31.4234}, {7.423439999999999, 31.4234}, {6.55469, 
      31.4234}, {6.093749999999999, 32.23590000000001}, {6.093749999999999, 
      32.9047}, {6.093749999999999, 33.709399999999995`}, {6.706250000000001, 
      34.2828}, {7.382809999999998, 34.2828}, {8.09219, 34.2828}, {8.60156, 
      33.64529999999999}, {9.31875, 32.74529999999999}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0,
      1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4oI13bczFAwc/n4rfTDno6qD+NQrnBmTDB0a
WI72G07Xdfiy81bXX1cEv3ir6O/T5wwczl8Ne6Mvre2Qkf+h9aSIPoRfreng
c4LddnaojoPvxYkx/w5rQOSvaDsYaK0UvrBEw+F5lva36bWaDqlpQMCm4eCx
v1bW4rkKnL/da4PFnJ+ccL77mqPLGVYoOdyWrkk0UjV26LTx3JV2ScnhBcgc
W2OHcE6xduP7Sg43hD45nndD8L+C3B2K4G/Uy1vMGIPgg81LNXa4oym75v9m
JQd/kHubjR0axGtZM934HPLB4WLtkBASpL5gpQqcD7b3rjqcv8X8x6EULi2I
v79aOZjb7A2a5qjl0B9cojL9vZXDC1CAdWs7XAe575qVw38QmK/rcKRtefip
RVYOP96+PmDZrO/A4aZaysRl5RAhvv0iA5+Bg/pb3n0GNy0h/HsGDn0g8/wt
4fHxeUNA9qxwC3h8wfiw+DQxBoLN1g7NIP+wMcD5809MXpK97Lc9jA8O78rf
9mB3rbd2SAeF+7Nf9uB4mmsN1ffLXh8Uf1MQfLC/oxD8+t9WBecsrB1aFdhV
z3yRh7rLyOEMGPyx/wny52I1uPkzQSASwb8ASj/WCH4mKN2YIPiw9PnE72XC
3/l/4HyY/2B89PQMAB4bTD0=
     "]], FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGIVIIaxWZDYzEOMzQDlM9BI/UDZhYsNABB5AsM=
     "], CompressedData["
1:eJx1lX9IU1EUx+fe7G1zzr297c1oDqPMgv7INOgH2dkfGklgZsQqIanmEImC
RiQhQTMjRiXRH2ojFwkiWBj9UEOsoB+EllRQaYKGUQgGGhL9UdnuPfed90d4
4fH4vHvvued87znnLT90bHdYMplMaaknnHrMqaeQj2z4kPlJCz+wg84tramx
LwMmSw4G2+Z8kP9j5XTbhQxgn1v7DZ4fnLsf2WtwDRulPnAEnWUtawSv8kHH
WOdUgWSH/Xkh/+sBTbAM/ZWbQwvfvLDAxiMz9DGOeIjP5cp5w1dV4ifxwbNF
h1Vh10Lsv6O1myfTiYtYGHeXwOmJX2OFdSp8ZPGdlMnedMNU3ciMFaqYPwkV
Lobi5WnrbHCA+yf2F9qJI+y8rwZfZutdLrQXdeG5N10Yd1cmrhsX3yUXrm9W
YHv3s05TtgJq/ZXoqw436lmvCHsqzDQdja/foqIOLzywmuna5cFz5r14HwUa
MV9/zWAez28N3+NeuOVe64wU+6Ce6RD3om5NXvjM7FQYzOeH1EUZ/VbhEvdT
w/gSbvCwOJ4abGIj6SNGvbMxvl0qMffruoe4ib3vifje+KCN6TKq4XuTRszt
V3uIuV99bryvE16RTy7Y8/3dXMsNFbZGgw1Dfqewq2DexRy475SCeXUmQ+ik
0H7UMwfzYtaFcVoCOC8rUML3L87cbnuA7PH6mA6gnUaDeR4cMfh4Z7Tn74ju
b0DUYSb84fkfgEZfQ3rtcxvZX8byvtqKfjYH8N4HZOhl5543WI9H58csL2M5
uD9pJeb3XWMjRl0d/zH3r8Jgfp5sMOrmJ+b+TvjRzgoHDLOx04/9Q5NEH7Hg
+71e5xIxz59Z86LM62g0DXrLejYm+iXsZz9N0MzXWYj5uqUycTHLj4SM/i2Y
kcdlUe8SbONsF/NZmE9VTuw3ySxRRwrWfa2TGO/JToz9x2DUwQ6VLE+Deh7a
sO7zFexP3VbqF7wPvJSJ9X6mM/Y7SdhxU3ylbD7kIc59mBwM3/YSc51jGunJ
72VGo/7K671H9O/YEvo/lH/Z8XZDpfG/0P8f/wDhJJi0
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KC3a4/WKxUTTQaRyUslZFREHGJ8BBB6IOATckq5J
vKQB52fmf2g9OQXB/w8C8rJwPticJTJwfsjbyx9nPJTG4MPsg/E1Pqm8nJUp
DBFvkYHz1wrp8KX/Q/BbeP3XT1mqAeeLT73CmfEIwYe5H52P7r8W8VrWzGNc
cH6MaoTMORseuHkwPsw+GB/mHhgf5l4YH+YfdD7MPhi/cHnJhn/+nPDwgvFh
4Qnjw8IbxofFB4wPcz86H2YfAEyIvPg=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYvW3vPsMVho4zAQDRgcY38QYCDYzO/z5Vvpg
TiKC/x8E7PXhfJEer1csJvoON3hvi6WWscD5AU88L5leZoPz3dccXc4gIQvn
tyqwq575Iuvwpnir6G9tfYcY1QiZc39kHZ5maX+bvlcPztdVlP+SI6bn8GXf
x63p22Qcjh92Wptpp+tgALL/s7RDzacNAdm7tDH46WlA8EzKofa3VcE5DR04
X19rpfAFFl04H+y/j7oOIW8vf5xxUBrOh7kfxof5r4XXf/2Up7pw/5va7A2a
lqgD54Ppy9oYfFj4gt1XpeOg/knl5ayTjA5bHZoeHb+hC+fLzIvTPD1BD86f
s0h55x93fTjf+wS77exQAzgfPf4Aj6/Crg==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gNty8NPbbJySAMDCwcY/0niwmsm+y0cfC5O
jPkXjOBfF/rkeN7NEs5/nqX9bbqtpYMfSN1jBH/ZCw+9/4GWcP7nDQHZs9gd
4Hz1J83zzmoh+O1Aa410HBwK1nTfzmBA8BtZjvYbbrdw+B2Te/Qfk4PDqcNO
azPlLBz0tVYKX5hi72BiDASPzTD4W/TyFjPa2DvMBAFNczhfYuoVzoxDCL4q
yB1ZFg72TY+Oz+hG8GHuh/Fh/vvzrfTBnEQLuP8P1MpapIeYI8LrBLvt7K9m
GHxY+KbE3nFj9jB3iFZw/JicY+EgPS9O83SBBZzvDVJ/FcEH229lCefng8In
wQrOR48/ANJRzIU=
     "]]}, 
   {Thickness[0.01586458679057418], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{21.4531, 19.282800000000005`}, {
     27.942999999999998`, 19.282800000000005`}}},
     CurveClosed->{0}], FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGIVIIaxWZDYzEOMzQDlM1Cohlp20ZoNABIJAsk=
     "], CompressedData["
1:eJx1lX1M1VUYxy9CGjjRAKXN0Pvivdx7a9xfcLm/l6v5hUKx0VSyZAap8XI1
t65zuBJJUkM2sUGFCMp8mZWikGVRWaSmK1DBl4XlgAXabSnhImugI6P7nAO/
80frbL/dfXbOfc7zfJ/vOcf0kj8zP9RgMIQEP1/wGxf8so0pf+TO9qIx6rFI
314LxriNRrMFIzRcXsRseKewvcOCX19+dHBXnOBDN9MTRkIEB1Ye+ME9oun/
P73t0NLzdzQ8Vbk1qmCZBXk53fNCW0fnHzFj4KNFa3aXaXwfvxFzt9xoqflN
1bn1bGrj6g8F/xh1J+XSNhWvnv0srbZRsK8gOKpNOj9J+0WYkUTjXRWHB2+9
1lZp5vntU3GB9u838/2Oqnp+Y1xP61cIZvGOCE6kuNFW2G9POimFq6gqK132
fbcVBhoDMiidApsNWbGfXzG8qPB6G2x4gfRtU3A84ZWDIXXx2Bz2bcXjQwre
YL/xuDa9eGXi+ypmkLAljlGdNMTu7Ahflerk+9ULrni2cNau3wWP9YP3ycn1
jfWipjY47jm4Th9oCFBivQ5ez0YNntlfZ1anCE4/9Xqc0mLXebV/oPSc246M
1glz9jRpeObK29n/hNrhbyjvWtUr2M0E9+rM/FTsRcuXX7w1vlLw1B1P94Ut
cej85qSFx6oecGLoROf2+8lermezk883aDpTWr4wwZ/Kd8/kFakIC98+M/ei
A+XBsO4DCiRnffTlQDy+If9tEXrfH1zfW/eQwvP8xIa1lP9+GTdJrxwbQPV2
Kcglnz4s4Tz57ycFC6keizQaV+E6egT/RXmnCWZ55knct6f+n/9k/VHQRX1/
TsJ7PScj636WeR8XSzxuk4yPKf8MCYVNU4cvbJJRMqytvZgu8X4ky7zOVIn7
zyhzX8wVzNY/KDiG9O9w8fqeEDxnQ9bh5BzBzG/3/stM/zrBrK7lgpl/5gu+
dPX5fpfXhYh51vXj+mTu67YEnCYd3B70pC1P2W0ygWyQb/cgn/T9zqgz8+8J
wdF031QJZvdXpJH7JdvD4/fPhDWwdW97kWDW78uCz5BuNzxoJy42orpycpFn
2MPPu2bCNbpPpsn6fcX8FiFjcs6insQWE2pofbmMxZ3BBh638vPsU/h52mzl
+/cpWLEkM37/uVk6dzviGkYOWnTOCp9WllQieArF91nwN/n1uoKNPXc7kyZa
uE+uKlhK64+ZdWZ+LBDM8psvmOkVMIJkrF2g6vUz//wimN0j6zSd2fn/SuPx
hozctx2j8xkmzjFeno/LrL8fzf7i27Wl4j0Ze1/+BY2C1Hw=
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.4420426517305069],
  ImageSize->{30.13417683686177, 36.86190784557908},
  PlotRange->{{0., 30.130000000000003`}, {0., 36.86}}]], "Output",
 CellChangeTimes->{3.942875236949836*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"31eef2c6-9551-4d6a-9959-fdabddb7e6c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cadena1", "=", 
   RowBox[{"MaTeX", "[", 
    RowBox[{"\"\<x_{1}=2\>\"", ",", 
     RowBox[{"FontSize", "->", "12"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{"x", "^", "2"}]}], "-", 
    RowBox[{"7", "x"}], "+", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"Text", "[", 
     RowBox[{"cadena1", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"23ca5fa9-c61f-42d9-9c86-0d293a9c181b"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
t+/4fBX8f2qDhO4=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
t+/4fBX8f2qDhO4=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 3}, {-2.0833333032457224`, 
             11.99999893877553}}, "Frame" -> {{False, False}, {False, False}},
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1, 3}, {-2.0833333032457224`, 11.99999893877553}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
t+/4fBX8f2qDhO4=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1, 3}, {-2.0833333032457224`, 11.99999893877553}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    FormBox[
     GraphicsBox[{
       Thickness[0.028587764436821043`], 
       StyleBox[{
         FilledCurveBox[CompressedData["
1:eJxTTMoPymNmYGBgBGI5IIaxWZDYzCSwGaB8BjL0DhR7oNwMAEUOAp8=
          "], CompressedData["
1:eJxdlHtI01EUx3+blYrzMefmb/MnOreRkUKmSIq0I6YVRUUGKQllOc0sFBIj
H1Q+AlmYPSBnkWmi/jEzkcykrIjs4SsKzFSwMqQwS8Og2nLt3rudkQcul8+P
3733nO/53qs+mL/b4MZxnMg+9tqH2D6mkvcn1i+oYPUP7Zd6TwGcbMi2R4oA
NhIPVbDYt3Anp0hwzC6+mxqfZnN3cYYuTRi2KqHOZI84ATabn7ZyY0rHHASD
JM7x8NjYVx5zMxB6yPpncvbdLIc9c28W6hplyFWh7rrBRSnyEJklUiid+jUe
PatATiXrPvDIIb03+gzflLCP5JMghfekrk4V+0/kD1dIfu+CHfvKYIDMEWEQ
cPJi4VBWAGhHP6Zy1zSMVyjgtCW+YLhNy+rYwCOnLOMsoluLEpnW16oCcpwp
Xcv0DFFCbv581YsYLepRnbC1N7tJg3ziSXeyKdLFJaTeq2FMj0IlJNVW+Gcf
CYNdpB61Cvl8mnGnqDYImdZ9QYDvTR2hQx4a5Hb/CJ+cWy7+lNk4GtOhZfVu
UsHvudlHcRod61MSj8zqkP/P92QwuSbYbOvSsDy3yYAjARrmpyh/qKv1LY71
0sGY94TCUOSD66lf7kuQab+sYuSG55ea81oseiPRRxyGTM8pUSNHkzikhvag
7siXR636CZJPkhoqA8tW5vb/RaZ6brchfy6bzhsx2/TzRJ/Daqgg/6/imC5n
HOtT3Fg/w7VM39ue2N8Ycu5xCTL1V6YfMvXhsB9sIT5p0yA/yC+dM8ldTPtR
4/BfpR8466X3cMYXNMSPk6GMWyQwQv0aBG+JnrFebJ8dPNSQ/Ao88L4InYoG
8QE35By6nxi5ebx1OqqCQ6b+tFn1TCcFq3de5LiXCqA6d4mZPlIeWUbybnYx
9YVJyfRMEbH7utbxrsws6Z0cWC5cXpf6B/m1pf/t9fSf+mLKSmTne+Fklo8c
XlFe0jMfBmC/nLyxMLFsYNIdWU9Y8IJw8t5VK5g+od6s7lO8Q18f1IPe9x4p
rqd+LZUhU79m8MjO9/Pr2WPG9RYVLH9f/wFaaYbj
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4oBb0jWJQWoO/8GA2wHGnzMTCCT5HH69fX3A
8rAqnM8AAg4qcL5oj9crFhMVB/sSx9rTdxD8aNUImXNzBOD8vfk1b2eqKsL5
dzRl1/yfrOjwqnir6G9tFQf3NUeXM8xQdCg/vM115l5lOD89DQjElB2EKyeV
nP2i4LBWSIcv3U7JwRgEJis4OE9oFkrbpYDBPwMCPAoOHxatVziroQjng81h
UYLzH7jGO876qATRV4Xgw9wP48P8B/bHUyW4/8HyiYpwPtgdlxUw+LDwhdij
6NAb0e3PaMADcd8NJTh/xbeXFWcmKMP5cxYp7/zjrgLnz5jAX2W2WhXOR48/
AMzdv9k=
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KO19gt12tqqFw578mrczjyo5wPguE5qF0qyUHf5+
K30w56M5nO93cWLMv8MI/hbzH4dSdhnA+f3BJSrT+xF8Xv/1U1IjMPnK1x4F
M5xRgvPd1xxdzhCh5BCt4PgxuQfBh5kP48Psh/FLtor+Pv0OwYe5H52P7r8d
wVYR/5fLwPm9Ed3+jBNk4f6F8WH2wfgw98D4MP/C+DD/oPNbFdhVz2yRgfNr
7v+4ZXxaGu5fGB9mPowPsx/Gh/kXxoe5H50P8x8AOIbKvQ==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYnnHj8ln1jo4vGnL7TaylnXYoJe3mLEHwd95
q+tvaruDQ839H7eMs2UcjEGg2sFB/ZPKy1knJSHqcxwc0tOAgE3SodvrFYtJ
ooOD25qjyxlmSDgsf+Gh958TwefxXz8ldYc9nC8+9QpnRpMtnH9DuibR6Kqt
wwPXeMdZGyUd+oNLVKb32zn8/Q8E+2UcniQuvGZy384hFWTfM1kHkPD/cAeH
apD7vJUcYP6ZCQKdynC+x/5aWYvnqnA+SHvaMg2HN7z7DGYqOTg8z9L+Nr1W
y0EC5J5HdnB+L8j+els4H+ye9TYQe+U14PyAW0CHC6nB+TWfNgRk31Jx+AoK
QFNbOB/sfnsEH2Y+ivx5WwefE+y2s01V4fwZIP/8RPANtFYKX1ii5qAPoqfY
OuxwaHp0XEIdbj6Mv+T+Pr45ygg+2B+yCP5eYLCki9g6GIHiVVjd4cRhp7WZ
fraQeN6sAdH/2dbhTfFW0d+nNR22mP84lLLLDs4/DlK/zx7OB1N6wPgA+UdK
A86HhT+MH84p1m58X9nhA1DZrOP2Ds4TmoXSpJQc1N8CI0TSHmL/ZAV4eILj
M1IMzjcBKxB1iBDffpGhzQHOR0/PAIiJQpc=
          "]]}, {
         Thickness[0.028587764436821043`]}, StripOnInput -> False]}, {
      ImageSize -> {34.97642839352429, 16.338709838107096`}, BaselinePosition -> 
       Scaled[0.32439307852814453`], ImageSize -> {35., 17.}, 
       PlotRange -> {{0., 34.98}, {0., 16.34}}, AspectRatio -> Automatic}], 
     TraditionalForm], {2, 2}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 3}, {-2.0833333032457224`, 11.99999893877553}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.942875262217752*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"1217cf71-eb0c-4686-8b27-54113fc75ac9"]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"14.0 para Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a4a4d985-be72-491c-9a25-ea800fd8a2b0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 416, 6, 50, "ExternalLanguage",ExpressionUUID->"e901ed4f-2dbc-469e-aecc-6595557b1342"],
Cell[999, 30, 58779, 1079, 64, "Output",ExpressionUUID->"cf89b514-04b9-4e60-aea1-25d16aaea571"]
}, Open  ]],
Cell[59793, 1112, 243, 5, 30, "Input",ExpressionUUID->"21a66614-1330-4da4-a45b-ca3798065533"],
Cell[CellGroupData[{
Cell[60061, 1121, 689, 21, 80, "Input",ExpressionUUID->"b78c436d-ab9d-467b-bc64-2ec77d11728c"],
Cell[60753, 1144, 26880, 493, 240, "Output",ExpressionUUID->"6645a9ed-af33-4d08-a658-80f613cc9724"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87670, 1642, 1498, 44, 173, "Input",ExpressionUUID->"3a8cb57a-24d1-4829-a29e-f3347a8b1e25"],
Cell[89171, 1688, 6543, 133, 364, "Output",ExpressionUUID->"dab81d31-fd7c-4eae-bad8-145a98685993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95751, 1826, 252, 4, 30, "Input",ExpressionUUID->"495d6e45-ccb6-449f-9f11-e196378cc12a"],
Cell[96006, 1832, 230, 4, 34, "Output",ExpressionUUID->"5dfcaa10-cbbe-4613-9228-4c83bff1a69e"]
}, Open  ]],
Cell[96251, 1839, 128, 2, 30, "Input",ExpressionUUID->"0fe7fe7a-51ef-4cf0-9845-f75f63ecb41d"],
Cell[CellGroupData[{
Cell[96404, 1845, 186, 3, 30, "Input",ExpressionUUID->"42c175f8-42b8-411d-bdb6-e7ef0fdb04c2"],
Cell[96593, 1850, 7730, 133, 54, "Output",ExpressionUUID->"31eef2c6-9551-4d6a-9959-fdabddb7e6c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104360, 1988, 689, 21, 80, "Input",ExpressionUUID->"23ca5fa9-c61f-42d9-9c86-0d293a9c181b"],
Cell[105052, 2011, 26779, 491, 263, "Output",ExpressionUUID->"1217cf71-eb0c-4686-8b27-54113fc75ac9"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

